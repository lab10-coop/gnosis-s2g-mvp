{
  "contractName": "DelegateConstructorProxy",
  "abi": [
    {
      "inputs": [
        {
          "name": "_masterCopy",
          "type": "address"
        },
        {
          "name": "initializer",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506040516102463803806102468339810180604052604081101561003357600080fd5b8101908080519060200190929190805164010000000081111561005557600080fd5b8281019050602081018481111561006b57600080fd5b815185600182028301116401000000008211171561008857600080fd5b505092919050505081600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610117576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806102226024913960400191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506000815111156101a45773ffffffffffffffffffffffffffffffffffffffff60005416600080835160208501846127105a03f46040513d6000823e60008214156101a0573d81fd5b5050505b5050606e806101b46000396000f3fe608060405273ffffffffffffffffffffffffffffffffffffffff600054163660008037600080366000845af43d6000803e6000811415603d573d6000fd5b3d6000f3fea165627a7a72305820d881abce0fbd5ae54b81916e98dfbabe125d7cb84e0caede671570f1dd2b1bd60029496e76616c6964206d617374657220636f707920616464726573732070726f7669646564",
  "deployedBytecode": "0x608060405273ffffffffffffffffffffffffffffffffffffffff600054163660008037600080366000845af43d6000803e6000811415603d573d6000fd5b3d6000f3fea165627a7a72305820d881abce0fbd5ae54b81916e98dfbabe125d7cb84e0caede671570f1dd2b1bd60029",
  "sourceMap": "355:889:22:-;;;610:632;8:9:-1;5:2;;;30:1;27;20:12;5:2;610:632:22;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;610:632:22;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;610:632:22;;;;;;675:11;715:1:24;692:25;;:11;:25;;;;684:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;781:11;768:10;;:24;;;;;;;;;;;;;;;;;;622:177;742:1:22;721:11;:18;:22;717:519;;;886:42;882:1;876:8;872:57;1050:1;1047;1033:11;1027:18;1020:4;1007:11;1003:22;991:10;983:5;978:3;974:15;961:91;1086:4;1080:11;1131:14;1128:1;1123:3;1108:38;1178:1;1169:7;1166:14;1163:2;;;1195:14;1190:3;1183:27;1163:2;836:390;;;;610:632;;355:889;;;;;;",
  "deployedSourceMap": "355:889:22:-;;;1078:42:24;1074:1;1068:8;1064:57;1153:14;1150:1;1147;1134:34;1248:1;1245;1229:14;1226:1;1214:10;1209:3;1196:54;1284:16;1281:1;1278;1263:38;1329:1;1320:7;1317:14;1314:2;;;1344:16;1341:1;1334:27;1314:2;1386:16;1383:1;1376:27",
  "source": "pragma solidity ^0.5.0;\nimport \"./Proxy.sol\";\n\n\n/// @title Delegate Constructor Proxy - Generic proxy contract allows to execute all transactions applying the code of a master contract. It is possible to send along initialization data with the constructor.\n/// @author Stefan George - <stefan@gnosis.pm>\n/// @author Richard Meissner - <richard@gnosis.pm>\ncontract DelegateConstructorProxy is Proxy {\n\n    /// @dev Constructor function sets address of master copy contract.\n    /// @param _masterCopy Master copy address.\n    /// @param initializer Data used for a delegate call to initialize the contract.\n    constructor(address _masterCopy, bytes memory initializer) Proxy(_masterCopy)\n        public\n    {\n        if (initializer.length > 0) {\n            // solium-disable-next-line security/no-inline-assembly\n            assembly {\n                let masterCopy := and(sload(0), 0xffffffffffffffffffffffffffffffffffffffff)\n                let success := delegatecall(sub(gas, 10000), masterCopy, add(initializer, 0x20), mload(initializer), 0, 0)\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize)\n                if eq(success, 0) { revert(ptr, returndatasize) }\n            }\n        }\n    }\n}\n",
  "sourcePath": "/home/sn/lab10/gnosis-s2g-mvp/submodules/safe-contracts/contracts/proxies/DelegateConstructorProxy.sol",
  "ast": {
    "absolutePath": "/home/sn/lab10/gnosis-s2g-mvp/submodules/safe-contracts/contracts/proxies/DelegateConstructorProxy.sol",
    "exportedSymbols": {
      "DelegateConstructorProxy": [
        3035
      ]
    },
    "id": 3036,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3013,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:22"
      },
      {
        "absolutePath": "/home/sn/lab10/gnosis-s2g-mvp/submodules/safe-contracts/contracts/proxies/Proxy.sol",
        "file": "./Proxy.sol",
        "id": 3014,
        "nodeType": "ImportDirective",
        "scope": 3036,
        "sourceUnit": 3122,
        "src": "24:21:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3015,
              "name": "Proxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3121,
              "src": "392:5:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Proxy_$3121",
                "typeString": "contract Proxy"
              }
            },
            "id": 3016,
            "nodeType": "InheritanceSpecifier",
            "src": "392:5:22"
          }
        ],
        "contractDependencies": [
          3121
        ],
        "contractKind": "contract",
        "documentation": "@title Delegate Constructor Proxy - Generic proxy contract allows to execute all transactions applying the code of a master contract. It is possible to send along initialization data with the constructor.\n @author Stefan George - <stefan@gnosis.pm>\n @author Richard Meissner - <richard@gnosis.pm>",
        "fullyImplemented": true,
        "id": 3035,
        "linearizedBaseContracts": [
          3035,
          3121
        ],
        "name": "DelegateConstructorProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3033,
              "nodeType": "Block",
              "src": "707:535:22",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3026,
                        "name": "initializer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3020,
                        "src": "721:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 3027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "721:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "742:1:22",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "721:22:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3032,
                  "nodeType": "IfStatement",
                  "src": "717:519:22",
                  "trueBody": {
                    "id": 3031,
                    "nodeType": "Block",
                    "src": "745:491:22",
                    "statements": [
                      {
                        "externalReferences": [
                          {
                            "initializer": {
                              "declaration": 3020,
                              "isOffset": false,
                              "isSlot": false,
                              "src": "1033:11:22",
                              "valueSize": 1
                            }
                          },
                          {
                            "initializer": {
                              "declaration": 3020,
                              "isOffset": false,
                              "isSlot": false,
                              "src": "1007:11:22",
                              "valueSize": 1
                            }
                          }
                        ],
                        "id": 3030,
                        "nodeType": "InlineAssembly",
                        "operations": "{\n    let masterCopy := and(sload(0), 0xffffffffffffffffffffffffffffffffffffffff)\n    let success := delegatecall(sub(gas(), 10000), masterCopy, add(initializer, 0x20), mload(initializer), 0, 0)\n    let ptr := mload(0x40)\n    returndatacopy(ptr, 0, returndatasize())\n    if eq(success, 0)\n    {\n        revert(ptr, returndatasize())\n    }\n}",
                        "src": "827:409:22"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Constructor function sets address of master copy contract.\n @param _masterCopy Master copy address.\n @param initializer Data used for a delegate call to initialize the contract.",
            "id": 3034,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3023,
                    "name": "_masterCopy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3018,
                    "src": "675:11:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 3024,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3022,
                  "name": "Proxy",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3121,
                  "src": "669:5:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Proxy_$3121_$",
                    "typeString": "type(contract Proxy)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "669:18:22"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3021,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3018,
                  "name": "_masterCopy",
                  "nodeType": "VariableDeclaration",
                  "scope": 3034,
                  "src": "622:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3017,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "622:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3020,
                  "name": "initializer",
                  "nodeType": "VariableDeclaration",
                  "scope": 3034,
                  "src": "643:24:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3019,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "643:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "621:47:22"
            },
            "returnParameters": {
              "id": 3025,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "707:0:22"
            },
            "scope": 3035,
            "src": "610:632:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3036,
        "src": "355:889:22"
      }
    ],
    "src": "0:1245:22"
  },
  "legacyAST": {
    "absolutePath": "/home/sn/lab10/gnosis-s2g-mvp/submodules/safe-contracts/contracts/proxies/DelegateConstructorProxy.sol",
    "exportedSymbols": {
      "DelegateConstructorProxy": [
        3035
      ]
    },
    "id": 3036,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3013,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:22"
      },
      {
        "absolutePath": "/home/sn/lab10/gnosis-s2g-mvp/submodules/safe-contracts/contracts/proxies/Proxy.sol",
        "file": "./Proxy.sol",
        "id": 3014,
        "nodeType": "ImportDirective",
        "scope": 3036,
        "sourceUnit": 3122,
        "src": "24:21:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3015,
              "name": "Proxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3121,
              "src": "392:5:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Proxy_$3121",
                "typeString": "contract Proxy"
              }
            },
            "id": 3016,
            "nodeType": "InheritanceSpecifier",
            "src": "392:5:22"
          }
        ],
        "contractDependencies": [
          3121
        ],
        "contractKind": "contract",
        "documentation": "@title Delegate Constructor Proxy - Generic proxy contract allows to execute all transactions applying the code of a master contract. It is possible to send along initialization data with the constructor.\n @author Stefan George - <stefan@gnosis.pm>\n @author Richard Meissner - <richard@gnosis.pm>",
        "fullyImplemented": true,
        "id": 3035,
        "linearizedBaseContracts": [
          3035,
          3121
        ],
        "name": "DelegateConstructorProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3033,
              "nodeType": "Block",
              "src": "707:535:22",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3026,
                        "name": "initializer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3020,
                        "src": "721:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 3027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "721:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "742:1:22",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "721:22:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3032,
                  "nodeType": "IfStatement",
                  "src": "717:519:22",
                  "trueBody": {
                    "id": 3031,
                    "nodeType": "Block",
                    "src": "745:491:22",
                    "statements": [
                      {
                        "externalReferences": [
                          {
                            "initializer": {
                              "declaration": 3020,
                              "isOffset": false,
                              "isSlot": false,
                              "src": "1033:11:22",
                              "valueSize": 1
                            }
                          },
                          {
                            "initializer": {
                              "declaration": 3020,
                              "isOffset": false,
                              "isSlot": false,
                              "src": "1007:11:22",
                              "valueSize": 1
                            }
                          }
                        ],
                        "id": 3030,
                        "nodeType": "InlineAssembly",
                        "operations": "{\n    let masterCopy := and(sload(0), 0xffffffffffffffffffffffffffffffffffffffff)\n    let success := delegatecall(sub(gas(), 10000), masterCopy, add(initializer, 0x20), mload(initializer), 0, 0)\n    let ptr := mload(0x40)\n    returndatacopy(ptr, 0, returndatasize())\n    if eq(success, 0)\n    {\n        revert(ptr, returndatasize())\n    }\n}",
                        "src": "827:409:22"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Constructor function sets address of master copy contract.\n @param _masterCopy Master copy address.\n @param initializer Data used for a delegate call to initialize the contract.",
            "id": 3034,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3023,
                    "name": "_masterCopy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3018,
                    "src": "675:11:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 3024,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3022,
                  "name": "Proxy",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3121,
                  "src": "669:5:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Proxy_$3121_$",
                    "typeString": "type(contract Proxy)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "669:18:22"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3021,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3018,
                  "name": "_masterCopy",
                  "nodeType": "VariableDeclaration",
                  "scope": 3034,
                  "src": "622:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3017,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "622:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3020,
                  "name": "initializer",
                  "nodeType": "VariableDeclaration",
                  "scope": 3034,
                  "src": "643:24:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3019,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "643:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "621:47:22"
            },
            "returnParameters": {
              "id": 3025,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "707:0:22"
            },
            "scope": 3035,
            "src": "610:632:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3036,
        "src": "355:889:22"
      }
    ],
    "src": "0:1245:22"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2019-05-31T15:14:46.837Z"
}